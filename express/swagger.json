{
  "openapi": "3.0.1",
  "info": {
    "title": "Express Todo App",
    "description": "Todo App",
    "version": "1.0.0"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:3000/v1"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Authentication",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Todo",
      "description": "Todo",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Create user",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserRegisterDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserRegisterDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input supplied, or email is taken",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Logs user into the system",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserLoginDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthUserLoginDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseApiResponse"
                    },
                    {
                      "$ref": "#/components/schemas/PairTokenResponse"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAccessToken": []
          }
        ],
        "summary": "Get user info",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Refresh Tokens",
        "security": [
          {
            "bearerRefreshToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseApiResponse"
                    },
                    {
                      "$ref": "#/components/schemas/PairTokenResponse"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/todos": {
      "get": {
        "tags": ["Todo"],
        "summary": "Get user todos",
        "security": [
          {
            "bearerAccessToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/TodoDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Todo"],
        "summary": "Create user todo",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoDto"
              }
            }
          },
          "required": true
        },
        "security": [
          {
            "bearerAccessToken": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TodoDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/todos/{todoId}": {
      "get": {
        "security": [
          {
            "bearerAccessToken": []
          }
        ],
        "summary": "Get user todo",
        "tags": ["Todo"],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "schema": {
              "type": "integer",
              "required": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TodoDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid todo id, or not found todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "security": [
          {
            "bearerAccessToken": []
          }
        ],
        "summary": "Update user todo",
        "tags": ["Todo"],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "schema": {
              "type": "integer",
              "required": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoDto"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/BaseApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "data": {
                          "$ref": "#/components/schemas/TodoDto"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid todo id, or not found todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "bearerAccessToken": []
          }
        ],
        "summary": "Delete user todo",
        "tags": ["Todo"],
        "parameters": [
          {
            "in": "path",
            "name": "todoId",
            "schema": {
              "type": "integer",
              "required": true
            }
          }
        ],
        "responses": {
          "204": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid todo id, or not found todo",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseApiResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BaseApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "AuthUserLoginDto": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "kekw@example.com",
            "format": "email"
          },
          "password": {
            "type": "string",
            "example": "12345678",
            "minLength": 8,
            "maxLength": 30
          }
        }
      },
      "AuthUserRegisterDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuthUserLoginDto"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Kekw",
                "minLength": 2
              },
              "repeat_password": {
                "type": "string",
                "example": "12345678"
              }
            },
            "required": ["name", "repeat_password"]
          }
        ]
      },
      "PairTokenResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string"
              },
              "refreshToken": {
                "type": "string"
              }
            }
          }
        }
      },
      "CreateTodoDto": {
        "type": "object",
        "properties": {
          "task": {
            "type": "string",
            "example": "Go to work!"
          }
        }
      },
      "TodoDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateTodoDto"
          },
          {
            "type": "object",
            "properties": {
              "createdAt": {
                "type": "string"
              },
              "updatedAt": {
                "type": "string"
              },
              "id": {
                "type": "number"
              }
            }
          }
        ]
      },
      "UpdateTodoDto": {
        "type": "object",
        "properties": {
          "task": {
            "type": "string"
          },
          "isCompleted": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAccessToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Use the access token returned by login (used for /me endpoint)"
      },
      "bearerRefreshToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Use the refresh token returned by login (used for refresh endpoint)"
      }
    }
  }
}
